<Chapter Label="Pregroups">
  <Heading>
    Pregroups
  </Heading>

  <Section>
    <Heading>Creating pregroups</Heading>

    <ManSection>
      <Func Name="PregroupByMultiplicationTable" Arg="enams, table"/>
      <Func Name="PregroupByMultiplicationTableNC" Arg="enams, table"/>
      <Returns>
        A pregroup in multiplication table representation.
      </Returns>
      <Description>
        If <A>enams</A> is a list of element names, which can be arbitrary GAP objects,
        with the convention that <C>enams[1]</C> is the name of the identity element, and
        <A>table</A> is a square table of non-negative integers that is the multiplication
        table of a pregroup, then <Ref Func="PregroupByMultiplicationTable"/> and
        <Ref Func="PregroupByMultiplicationTableNC"/> return a pregroup in multiplication
        table representation.
        <P/>
        By convention the elements of the pregroup are numbered <C>[1..n]</C> with
        <C>0</C> denoting an undefined product in the table.
        <P/>
        The axioms for a pregroup are checked by <Ref Func="PregroupByMultiplicationTable"/> and
        not checked by <Ref Func="PregroupByMultiplicationTableNC"/>.
        <Example><![CDATA[
gap> pregroup := PregroupByMultiplicationTable( "1xyY",
>                                               [ [1,2,3,4]
>                                               , [2,1,0,0]
>                                               , [3,4,0,1]
>                                               , [4,0,1,3] ] );
<pregroup with 4 elements in table rep>
]]></Example>
      </Description> 
    </ManSection>

    <ManSection>
      <Func Name="PregroupOfFreeGroup" Arg="rank"/>
      <Returns>
        A pregroup of a free group of rank <A>rank</A>.
      </Returns>
      <Description>
        Returns a pregroup of a free group of finite rank <A>rank</A>. Pregroups
        of free groups are not stored in multiplication table representation for
        efficiency reasons.
        <Example><![CDATA[
gap> pregroup := PregroupOfFreeGroup(4);
<pregroup of free group of rank 4>
]]></Example>
      </Description>
    </ManSection>

    <ManSection>
      <Func Name="PregroupFromFreeProduct" Arg="G, H"/>
      <Returns>
        A pregroup in multiplication table representation.
      </Returns>
      <Description>
      If <A>G</A> and <A>H</A> are groups, then <Ref Func="PregroupFromFreeProduct"/> returns
      the pregroup of the free product of <A>G</A> and <A>H</A>.
      <Example><![CDATA[
gap> pregroup := PregroupFromFreeProduct(SmallGroup(12,2), SmallGroup(24,4));
<pregroup with 35 elements in table rep>
]]></Example>
      </Description>
    </ManSection>

  </Section>


  <Section>
    <Heading>Creating pregroup presentations</Heading>
  </Section>

</Chapter>
